[{"C:\\react\\react_tasks\\src\\index.js":"1","C:\\react\\react_tasks\\src\\context\\index.js":"2","C:\\react\\react_tasks\\src\\components\\post_details.jsx":"3","C:\\react\\react_tasks\\src\\components\\single_user.jsx":"4","C:\\react\\react_tasks\\src\\components\\posts.jsx":"5","C:\\react\\react_tasks\\src\\components\\App.js":"6","C:\\react\\react_tasks\\src\\reportWebVitals.js":"7","C:\\react\\react_tasks\\src\\components\\navbar.jsx":"8","C:\\react\\react_tasks\\src\\components\\users.jsx":"9","C:\\react\\react_tasks\\src\\reducers\\index.js":"10","C:\\react\\react_tasks\\src\\components\\pagination.jsx":"11"},{"size":488,"mtime":1611542525449,"results":"12","hashOfConfig":"13"},{"size":3366,"mtime":1611684166014,"results":"14","hashOfConfig":"13"},{"size":1107,"mtime":1611680512054,"results":"15","hashOfConfig":"13"},{"size":3907,"mtime":1611684683930,"results":"16","hashOfConfig":"13"},{"size":1454,"mtime":1611684517477,"results":"17","hashOfConfig":"13"},{"size":1154,"mtime":1611679098122,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1606149909838,"results":"19","hashOfConfig":"13"},{"size":499,"mtime":1611542670853,"results":"20","hashOfConfig":"13"},{"size":4224,"mtime":1611681927959,"results":"21","hashOfConfig":"13"},{"size":1212,"mtime":1611684844610,"results":"22","hashOfConfig":"13"},{"size":751,"mtime":1611546030479,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1j9cmgc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\react\\react_tasks\\src\\index.js",[],["53","54"],"C:\\react\\react_tasks\\src\\context\\index.js",[],"C:\\react\\react_tasks\\src\\components\\post_details.jsx",["55","56"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PostsContext } from \"../context\";\r\nexport default function PostDetails() {\r\n  const { id } = useParams();\r\n  const [singlePost, setSinglePost] = useState({});\r\n  const { state } = useContext(PostsContext);\r\n  useEffect(() => {\r\n    const filterPosts = state.posts.filter((data) => data.id == id);\r\n    setSinglePost(...filterPosts);\r\n  }, []);\r\n  if (typeof singlePost.title !== \"undefined\") {\r\n    return (\r\n      <div className=\"pt-80 px-6\">\r\n        <div className=\"posts-details\">\r\n          <div className=\"card\">\r\n            <h2 className=\"text-capitalize\">{singlePost.title}</h2>\r\n            <div className=\"card-bo\">\r\n              <p>{singlePost.body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"mt-6 px-6\">\r\n        <div className=\"posts-details\">\r\n          <div className=\"card\">\r\n            <h3>Loading............</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\react\\react_tasks\\src\\components\\single_user.jsx",["57","58","59","60"],"import React, { useState, useEffect, useContext, useReducer } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Pagination from \"./pagination\";\r\nimport { PostsContext } from \"../context\";\r\nimport { postsReducer } from \"../context\";\r\nimport \"../assets/scss/pagination.scss\";\r\nimport \"../assets/scss/single_user.scss\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport default function SingleUser() {\r\n  const { id, user_name } = useParams();\r\n  const [post, setPost] = useState({\r\n    userId: id,\r\n    id: uuidv4(),\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n  const {\r\n    state: { currentPost = {} },\r\n    dispatch,\r\n  } = useContext(PostsContext);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n  const { state } = useContext(PostsContext);\r\n\r\n  // get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = state.posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = (pageNumber, e) => {\r\n    setCurrentPage(pageNumber);\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPost.title) {\r\n      setPost((prevState) => ({\r\n        ...prevState,\r\n        title: currentPost.title,\r\n        body: currentPost.body,\r\n      }));\r\n    }\r\n  }, [currentPost.id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    if (currentPost.title) {\r\n      dispatch({ type: \"UPDATE_POST\", payload: post });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_POST\",\r\n        payload: post,\r\n      });\r\n      setPost({\r\n        userId: \"\",\r\n        id: \"\",\r\n        title: \"\",\r\n        body: \"\",\r\n      });\r\n    }\r\n    setPost({\r\n      userId: \"\",\r\n      id: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-wrapper pt-80 px-6\">\r\n      <form className=\"post-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          required\r\n          name=\"title\"\r\n          value={post.title}\r\n          onChange={(e) =>\r\n            setPost((prevState) => ({ ...prevState, title: e.target.value }))\r\n          }\r\n        />\r\n        <textarea\r\n          name=\"body\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          required\r\n          value={post.body}\r\n          onChange={(e) =>\r\n            setPost((prevState) => ({ ...prevState, body: e.target.value }))\r\n          }\r\n        ></textarea>\r\n        <button className=\"btn\">\r\n          {currentPost.title ? \"Update Post\" : \"Add Post\"}\r\n        </button>\r\n      </form>\r\n      <div className=\"card\">\r\n        <h3>Author Name: {user_name}</h3>\r\n      </div>\r\n      <div className=\"posts-wrapper-2\">\r\n        <ul className=\"posts-lists\">\r\n          {currentPosts.map((posts) => (\r\n            <li key={posts.id} className=\"d-flex align-items-center\">\r\n              <Link to={`/post_details/${posts.id}`}>{posts.title}</Link>\r\n              <div className=\"user-action pl-2\">\r\n                <button\r\n                  className=\"sm-btn btn-success\"\r\n                  onClick={() =>\r\n                    dispatch({ type: \"SET_CURRENT_POST\", payload: posts })\r\n                  }\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"sm-btn btn-danger ml-1\"\r\n                  onClick={() => dispatch({ type: \"REMOVE\", payload: posts })}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"pagination-wrapper mt-4\">\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={state.posts.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\react\\react_tasks\\src\\components\\posts.jsx",["61","62"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PostsContext } from \"../context\";\r\nimport \"../assets/scss/posts.scss\";\r\nexport default function Posts() {\r\n  const { state, dispatch } = useContext(PostsContext);\r\n  const [postsData, setPostsData] = useState([]);\r\n  const [postsPerPage, setPostsPerPage] = useState(3);\r\n  const view_posts_data = postsData.slice(0, postsPerPage);\r\n  useEffect(() => {\r\n    setPostsData(state.posts);\r\n  }, []);\r\n\r\n  const handleLoadMore = () => {\r\n    setPostsPerPage((prevState) => {\r\n      return prevState * 2;\r\n    });\r\n  };\r\n\r\n  if (view_posts_data.length > 0) {\r\n    return (\r\n      <div className=\"posts-wrapper mt-5\">\r\n        <h2>All Posts</h2>\r\n        <ul className=\"posts-lists\">\r\n          {view_posts_data.map((posts) => (\r\n            <li key={posts.id}>\r\n              <Link to={`post_details/${posts.id}`}>{posts.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {postsPerPage < postsData.length && (\r\n          <div className=\"load-more-btn\">\r\n            <button\r\n              className=\"btn load-more-btn mt-3\"\r\n              onClick={() => handleLoadMore()}\r\n            >\r\n              Load More Posts\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"posts-wrapper\">\r\n        <h2>Loading.........</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\react\\react_tasks\\src\\components\\App.js",["63","64"],"import React,{useState,useContext,useReducer} from 'react'\nimport {PostsContext} from \"../context\";\nimport {postsReducer} from \"../reducers\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Posts from \"./posts\";\nimport Navbar from \"./navbar\";\nimport PostDetails from \"./post_details\";\nimport Users from \"./users\";\nimport SingleUser from \"./single_user\";\nimport \"../assets/scss/global.scss\";\nexport default function App() {\n  \nconst initialState = useContext(PostsContext);\nconst [state,dispatch] = useReducer(postsReducer,initialState);\n  return (\n    <PostsContext.Provider value={{state,dispatch}}>\n    <div>\n    <div className=\"App\">\n      <Router>\n      <Navbar/>\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Posts/>\n          </Route>\n          <Route path=\"/post_details/:id\">\n            <PostDetails/>\n          </Route>\n          <Route path=\"/users\">\n           <Users/>\n          </Route>\n          <Route path=\"/single_user/:id/:user_name\">\n            <SingleUser/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n    </div>\n    </PostsContext.Provider>\n\n  )\n}","C:\\react\\react_tasks\\src\\reportWebVitals.js",[],["65","66"],"C:\\react\\react_tasks\\src\\components\\navbar.jsx",[],"C:\\react\\react_tasks\\src\\components\\users.jsx",["67","68","69","70"],"C:\\react\\react_tasks\\src\\reducers\\index.js",[],"C:\\react\\react_tasks\\src\\components\\pagination.jsx",["71","72"],"import React from \"react\";\r\n\r\nexport default function Pagination({\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n}) {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((numbers) => (\r\n          <li className=\"page-item\" key={numbers}>\r\n            <a\r\n              className={\r\n                currentPage == numbers ? \"page-link active\" : \"page-link\"\r\n              }\r\n              href=\"#\"\r\n              onClick={(e) => paginate(numbers, e)}\r\n            >\r\n              {numbers}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":9,"column":62,"nodeType":"79","messageId":"80","endLine":9,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":11,"column":6,"nodeType":"83","endLine":11,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":50,"nodeType":"87","messageId":"88","endLine":1,"endColumn":60},{"ruleId":"85","severity":1,"message":"89","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":22,"column":24,"nodeType":"87","messageId":"88","endLine":22,"endColumn":39},{"ruleId":"81","severity":1,"message":"91","line":42,"column":6,"nodeType":"83","endLine":42,"endColumn":22,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":6,"column":18,"nodeType":"87","messageId":"88","endLine":6,"endColumn":26},{"ruleId":"81","severity":1,"message":"94","line":12,"column":6,"nodeType":"83","endLine":12,"endColumn":8,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"96","line":1,"column":15,"nodeType":"87","messageId":"88","endLine":1,"endColumn":23},{"ruleId":"85","severity":1,"message":"97","line":4,"column":50,"nodeType":"87","messageId":"88","endLine":4,"endColumn":54},{"ruleId":"73","replacedBy":"98"},{"ruleId":"75","replacedBy":"99"},{"ruleId":"77","severity":1,"message":"78","line":39,"column":18,"nodeType":"79","messageId":"80","endLine":39,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":41,"column":25,"nodeType":"79","messageId":"80","endLine":41,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":87,"column":31,"nodeType":"102","messageId":"103","endLine":87,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":88,"column":39,"nodeType":"79","messageId":"80","endLine":88,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":20,"column":13,"nodeType":"106","endLine":26,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":22,"column":29,"nodeType":"79","messageId":"80","endLine":22,"endColumn":31},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'state.posts'. Either include them or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'postsReducer' is defined but never used.","'setPostsPerPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPost.body' and 'currentPost.title'. Either include them or remove the dependency array.",["110"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state.posts'. Either include it or remove the dependency array.",["111"],"'useState' is defined but never used.","'Link' is defined but never used.",["107"],["108"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [id, state.posts]",{"range":"118","text":"119"},"Update the dependencies array to be: [currentPost.body, currentPost.id, currentPost.title]",{"range":"120","text":"121"},"Update the dependencies array to be: [state.posts]",{"range":"122","text":"123"},[460,462],"[id, state.posts]",[1351,1367],"[currentPost.body, currentPost.id, currentPost.title]",[506,508],"[state.posts]"]